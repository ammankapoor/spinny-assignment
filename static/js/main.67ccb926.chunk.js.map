{"version":3,"sources":["shared/utility.js","components/Header/Header.js","components/Overview/Overview.js","container/Search/Search.js","store/actions.js","container/ResultSection/ResultSection.js","pages/Assignment/Assignment.js","serviceWorker.js","store/reducer.js","index.js"],"names":["device","mobile","desktop","window","screen","width","func","delay","debounceTimer","context","this","args","arguments","clearTimeout","setTimeout","apply","Header","useState","menuOpen","toggleMenuOpen","deviceType","utility","getContactList","Fragment","href","target","className","src","alt","onClick","class","Overview","connect","state","data","dispatch","onSearchSuccess","type","onToggleFetchingData","onResetData","onSetSearchValue","searchVal","setSearchVal","debouncedGetQueryData","length","fetch","then","response","json","result","catch","error","console","value","onKeyDown","e","keyCode","onChange","placeholder","fetchingData","fetchedSuccess","searchValue","lastPage","pageNumber","setPageNumber","useInView","threshold","loadMoreRef","inView","useEffect","temp","results","last_page","style","justifyContent","overflow","map","index","url","key","loading","image_url","title","ref","Assignment","Boolean","location","hostname","match","initialState","reducer","action","errorData","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.67ccb926.chunk.js","sourcesContent":["export default {\n  getDeviceType() {\n    const device = { mobile: false, desktop: false };\n    if (window.screen.width < 1200) {\n      device.mobile = true;\n    } else {\n      device.desktop = true;\n    }\n    return device;\n  },\n  debounce(func, delay) {\n    let debounceTimer;\n    return function() {\n      const context = this;\n      const args = arguments;\n      clearTimeout(debounceTimer);\n      debounceTimer = setTimeout(() => func.apply(context, args), delay);\n    };\n  }\n};\n","import React, {useState} from \"react\";\nimport \"./Header.scss\";\n\nimport utility from \"../../shared/utility\";\n\nfunction Header() {\n  const [menuOpen, toggleMenuOpen] = useState(false);\n  const deviceType = utility.getDeviceType();\n\n  function getContactList(){\n    return <React.Fragment>\n        <a href=\"https://zety.com/mycv/ammankapoor\" target=\"_blank\" className='anchor'>\n            <img\n              className=\"img\"\n              src=\"https://storage.needpix.com/rsynced_images/sheet-1292824_1280.png\"\n              alt=\"resume\"\n            />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/amman-kapoor-6a8a95120/\"\n            target=\"_blank\"\n            className='anchor'\n          >\n            <img\n              className=\"img\"\n              src=\"https://cdn4.iconfinder.com/data/icons/social-messaging-ui-color-shapes-2-free/128/social-linkedin-circle-512.png\"\n              alt=\"linkedin\"\n            />\n          </a>\n          <a href=\"https://github.com/ammankapoor/spinny-assignment/tree/master\" target=\"_blank\" className='anchor'>\n            <img\n              className=\"img\"\n              src=\"https://cdn.icon-icons.com/icons2/1907/PNG/512/iconfinder-github-4555889_121361.png\"\n              alt=\"github\"\n            />\n          </a>\n    </React.Fragment>\n  }\n\n  return (\n    <div className=\"container flex\">\n      <div className=\"flex\">\n        <div className=\"flex logo\">A</div>\n        <div className=\"title\">Aman Kapoor</div>\n      </div>\n      {deviceType.desktop ? (\n        <div>\n          {getContactList()}\n        </div>\n      ) : (\n        <div className={`${menuOpen && 'change'} menu-container`} onClick={()=>toggleMenuOpen(!menuOpen)}>\n          <div class=\"bar1\"></div>\n          <div class=\"bar2\"></div>\n          <div class=\"bar3\"></div>\n        </div>\n      )}\n      {menuOpen &&\n          <div className=\"overlay flex flex-column\">\n              {getContactList()}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Overview.scss\";\n\nimport utility from \"../../shared/utility\";\n\nfunction Overview() {\nconst deviceType = utility.getDeviceType();\n  return (\n    <div className={deviceType.desktop && 'main'}>\n        <div className='heading'><img className='spinny-logo' src='https://res-5.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco/v1438197017/bpdpscfwegecqxxx7hkb.png' alt='spinny-logo' />Spinny</div>\n        <div className='subheading'>REACT INTERVIEW ASSIGNMENT</div>\n        <p className='information'>This assignment is done by using latest version of react, redux, Sass and more. Below is some of the information about the project. </p>\n        <ul>\n            <li>React 16.13.0 used.</li>\n            <li>Redux used.</li>\n            <li>Javascript used.</li>\n            <li>Webpack used.</li>\n            <li>Babel used.</li>\n            <li>Sass used.</li>\n            <li>ES6 used.</li>\n            <li>Debouncing used.</li>\n            <li>Support Desktop and Mobile Both.</li>\n            <li>Infinite Scrolling with Intersection observer Used.</li>\n        </ul>\n        <div>On the right corner of screen you can find my resume, linkedin and code repo link.</div>\n    </div>\n  );\n}\n\nexport default Overview;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Search.scss\";\n\nimport {SET_DATA, SET_FECTHING_DATA, RESET_DATA, SET_SEARCH_VALUE} from '../../store/actions'; \nimport utility from '../../shared/utility';\n\nfunction Search({onSearchSuccess, onToggleFetchingData, onResetData, onSetSearchValue}) {\n  const [searchVal, setSearchVal] = useState(\"\");\n  function getQueryData() {\n    if(searchVal.length<1)\n    return\n    onResetData();\n    onSetSearchValue(searchVal);\n    onToggleFetchingData(true);\n    fetch(`https://api.jikan.moe/v3/search/anime?q=${searchVal}&limit=16&page=1`)\n      .then(response => response.json())\n      .then(result => {\n        onToggleFetchingData(false);\n        onSearchSuccess(result);\n      })\n      .catch(error => {\n        onToggleFetchingData(false);\n        console.error(\"Error:\", error);\n      });\n  }\n\n  const debouncedGetQueryData= utility.debounce(()=>getQueryData(),500);\n  return (\n    <div className=\"search-container\">\n      <div className=\"search-heading\">Try out the Anime Search API</div>\n      <div className=\"search\">\n        <input\n          className=\"input\"\n          value={searchVal}\n          onKeyDown= {e => {e.keyCode === 13 && debouncedGetQueryData()}}\n          onChange={e => setSearchVal(e.target.value)}\n          placeholder=\"search for an anime, e.g Naruto\"\n        />\n        <button className=\"submitBtn\" onClick={() => debouncedGetQueryData()}>\n          Go\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nconst mapDisptachToProps = dispatch =>  {\n  return {\n    onSearchSuccess: (data) => dispatch({type:SET_DATA, data }),\n    onToggleFetchingData: (data) => dispatch({type:SET_FECTHING_DATA, data }),\n    onResetData: () => dispatch({type:RESET_DATA}),\n    onSetSearchValue:(data) => dispatch({type:SET_SEARCH_VALUE, data }),\n  }\n}\n\nexport default connect(mapStateToProps,mapDisptachToProps)(Search);","export const SET_DATA = 'SET_DATA';\nexport const RESET_DATA = 'RESET_DATA';\nexport const SET_FECTHING_DATA = 'SET_FECTHING_DATA';\nexport const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\"\nimport \"./ResultSection.scss\";\n\nimport { RESET_DATA, SET_DATA } from \"../../store/actions\";\n\nfunction ResultSection({ data, fetchingData, fetchedSuccess, searchValue, onSearchSuccess, lastPage }) {\n  const [pageNumber, setPageNumber] = useState(2);\n\n  const [loadMoreRef, inView] = useInView({\n    threshold: 0.5,\n  })\n\n  useEffect(()=>{\n    if(inView)\n    {\n      fetch(`https://api.jikan.moe/v3/search/anime?q=${searchValue}&limit=16&page=${pageNumber}`)\n      .then(response => response.json())\n      .then(result => {\n        const temp ={};\n        temp.results= [...data, ...result.results];\n        temp.last_page= result.last_page;\n         onSearchSuccess(temp);\n        if(result.last_page != pageNumber)\n          setPageNumber(pageNumber + 1);\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n    }\n  },[inView])\n\n  useEffect(()=>{\n      if(fetchingData)\n      {\n        setPageNumber(2);\n      }\n  },[fetchingData])\n\n  return (\n    <div\n      className=\"search-container result-container\"\n      style={{ justifyContent: fetchedSuccess && \"unset\", overflow: fetchedSuccess ? \"auto\" :'hidden' }}\n    >\n      {fetchingData && (\n        <img\n          src=\"https://i.pinimg.com/originals/f9/9f/c8/f99fc83c656da7ec8db2f6cbc88c6fa6.gif\"\n          alt=\"loader\"\n        />\n      )}\n      {fetchedSuccess && data && (\n        <React.Fragment>\n          {data.map((data, index) => {\n              return (\n                <a className=\"card\" href={data.url} target=\"_blank\" key={index}>\n                  <img loading='lazy' className=\"pic\" src={data.image_url} />\n                  <div className=\"card-heading\">{data.title}</div>\n                </a>\n              );\n            })}\n            {pageNumber <= lastPage && <img ref={loadMoreRef} src='https://mir-s3-cdn-cf.behance.net/project_modules/disp/dae67631234507.564a1d230a290.gif' alt='loader' />}\n        </React.Fragment>\n      )}\n      {!fetchingData && data.length ===0 &&\n        <img className='no-data-img' src='https://www.pngkey.com/png/full/396-3960421_abstract-png-transparent-images-connect-the-data-dots.png' alt='no-data' />\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    fetchingData: state.fetchingData,\n    fetchedSuccess: state.fetchedSuccess,\n    searchValue: state.searchValue,\n    lastPage: state.lastPage\n  };\n};\n\nconst mapDisptachToProps = dispatch => {\n  return {\n    onResetData: () => dispatch({ type: RESET_DATA }),\n    onSearchSuccess: (data) => dispatch({type:SET_DATA, data })\n  };\n};\n\nexport default connect(mapStateToProps, mapDisptachToProps)(ResultSection);\n","import React from 'react';\nimport './Assignment.scss';\n\nimport Header from '../../components/Header/Header';\nimport Overview from '../../components/Overview/Overview';\nimport Search from '../../container/Search/Search';\nimport ResultSection from '../../container/ResultSection/ResultSection';\n\nimport utility from \"../../shared/utility\";\n\nfunction Assignment() {\n  const deviceType = utility.getDeviceType();\n  return (\n    <React.Fragment>\n    <div className=\"app-container\">\n      <Header />\n      <div className={deviceType.desktop && 'flex-container margin-top-50'}>\n        <div style={{ width: deviceType.desktop && '50%'}}>\n        <Overview />\n        </div>\n        <div style={{ width: deviceType.desktop && '50%'}}>\n        <Search />\n        <ResultSection />\n        </div>\n      </div>\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default Assignment;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_DATA, RESET_DATA, SET_FECTHING_DATA, SET_SEARCH_VALUE } from './actions';\n\nconst initialState = {\n  fetchingData: false,\n  data: [],\n  fetchedSuccess: false,\n  searchValue: null,\n  lastPage: null\n};\n\nfunction reducer(state = initialState, action) {\nswitch(action.type) {\n  case SET_DATA:\n    return {\n        ...state,\n        data: action.data.results,\n        lastPage: action.data.last_page,\n        fetchingData: false,\n        fetchedSuccess: true\n    };\n  case RESET_DATA:\n    return {\n      fetchingData: false,\n      data: [],\n      fetchedSuccess: false,\n      errorData: [],\n      lastPage: null\n    };\n  case SET_FECTHING_DATA:\n    return {\n        ...state,\n        fetchingData: action.data\n    }; \n  case SET_SEARCH_VALUE:\n    return {\n        ...state,\n        searchValue: action.data\n    }; \n  default:\n    return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.scss';\nimport Assignment from './pages/Assignment/Assignment';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\n\nconst store= createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n     <Assignment />\n     </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}